{"version":3,"file":"static/js/892.4eb8c376.chunk.js","mappings":"wLAkHA,SAASA,EAAT,GAA2B,IAANC,EAAK,EAALA,IAInB,GAAsBC,EAAAA,EAAAA,UAAS,IAA/B,eAAKC,EAAL,KAAWC,EAAX,KAcC,OAZDC,EAAAA,EAAAA,YAAW,WAKT,IAAIC,EAAQC,YAAY,WAAMH,EAAQ,SAAS,KAC/C,OAAO,WACHI,aAAaF,GACbF,EAAQ,OAEZ,CAACH,KAEM,gBAAKQ,UAAW,SAAUN,EAA1B,SAEH,EACI,4CACA,4CACA,4CACFF,KAyBV,UAhJA,SAAgBS,GAuBZ,IAAIC,GAAYC,EAAAA,EAAAA,MAEhB,GAAoBV,EAAAA,EAAAA,UAAS,IAA7B,eAEA,GAFA,WAEwBA,EAAAA,EAAAA,UAAS,IAAjC,eACA,GADA,WAC8BA,EAAAA,EAAAA,UAAS,IAAvC,eAEA,GAFA,WAEoBA,EAAAA,EAAAA,UAAS,IAA7B,eAAKD,EAAL,KAAUY,EAAV,KAEKC,GAAMC,EAAAA,EAAAA,MAAND,GAEDE,EAAaN,EAAMO,QAAQC,WAAU,SAASC,GAC9C,OAAOA,EAAEL,IAAMA,KAenB,OAZAT,EAAAA,EAAAA,YAAW,WAGP,IAAIe,EAASC,aAAaC,QAAQ,eAClCF,EAASG,KAAKC,MAAMJ,IACbK,KAAKf,EAAMO,QAAQD,GAAYF,IAEtCM,EAAS,IAAIM,IAAIN,GACjBA,EAASO,MAAMC,KAAKR,GACpBC,aAAaQ,QAAQ,aAAcN,KAAKO,UAAUV,MACnD,KAGC,iBAAKX,UAAU,YAAf,WAOI,iBAAKA,UAAU,MAAf,WACI,gBAAKA,UAAU,WAAf,UACI,gBAAKsB,IAAOrB,EAAMsB,QAAQhB,GAAaiB,MAAM,YAEjD,iBAAKxB,UAAU,gBAAf,WACI,oBAGA,wBAAKC,EAAMO,QAAQD,GAAYkB,SAC/B,uBAAIxB,EAAMO,QAAQD,GAAYmB,WAC9B,gCAAQzB,EAAMO,QAAQD,GAAYoB,UAClC,mBAAQC,QAAU,WACd1B,GAAS2B,EAAAA,EAAAA,IAAY,CAACxB,GAAI,EAAGyB,KAAK7B,EAAMO,QAAQD,GAAYkB,MAAOM,MAAO9B,EAAMO,QAAQD,GAAYwB,UADxG,6CAMR,UAAC,IAAD,CAAKC,QAAQ,OAAOC,iBAAiB,QAArC,WACA,SAAC,SAAD,WACI,SAAC,SAAD,CAAUC,SAAS,QAAQN,QAAS,WAAKxB,EAAO,IAAhD,uBAEJ,SAAC,SAAD,WACI,SAAC,SAAD,CAAU+B,SAAS,QAAQP,QAAS,WAAKxB,EAAO,IAAhD,yBAEJ,SAAC,SAAD,WACI,SAAC,SAAD,CAAU+B,SAAS,QAAQP,QAAS,WAAKxB,EAAO,IAAhD,4BAIJ,SAACb,EAAD,CAAYC,IAAKA","sources":["pages/Detail.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport styled from 'styled-components';\r\nimport {Nav} from 'react-bootstrap';\r\n\r\n\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport { increaseCount, addProduct } from './../store.js';\r\n\r\n//해당 page에만 적용되는 css\r\n//로딩시간 향상 (해당 페이지에 필요한거만 쓰니까)\r\n//YellowBtn에 bg 라는 props 사용가능\r\n// let YellowBtn = styled.button`\r\n//     background: ${ props => props.bg};\r\n//     color: ${ props=> props.bg == 'blue' ? 'white' : 'black'};\r\n//     padding:10px;\r\n// `\r\n// let copyBtn = styled.button(YellowBtn)\r\n\r\nfunction Detail(props){\r\n\r\n    //hook\r\n    //componenet가 mount , update시 실행\r\n    //시간이 좀 오래걸리는 연산, 서버에서 데이터를 받아올 때, Timer등에 사용\r\n    //Dependency에 모양만 만들어두면 1회만 동작\r\n    // useEffect( ()=> {       \r\n    //     let Timer = setTimeout( ()=>{ setAlertVal(1) } , 2000)\r\n        \r\n    //     //Clean Up Function\r\n    //     //서버로 데이터 요청 받아오고 할때 쓰면 좋을듯\r\n    //     //mount 될때는 실행 안됨\r\n    //     //unmount 될때는 실행 함\r\n    //     return()=>{\r\n    //         //기존의 타이머는 제거해주세욧 \r\n    //         //기존의 데이터 요청은 제거해주세욧\r\n    //         clearTimeout(Timer);\r\n    //     }    \r\n    // }, [])\r\n\r\n    //redux store의 모든 state 꺼내서 a에 저장\r\n    //useSelector에 함수 필수 \r\n    //store.js에 요청을 보내는 함수\r\n    let dispatch =  useDispatch();\r\n\r\n    let [num, setNum] = useState('');\r\n\r\n    let [count, setCount] = useState(0);\r\n    let [alertVal, setAlertVal] = useState(0);\r\n\r\n    let [tab, setTab] = useState(0);\r\n\r\n    let {id} = useParams();\r\n\r\n    let findResult = props.product.findIndex(function(x){\r\n        return x.id == id;\r\n    })\r\n\r\n    useEffect( () => {\r\n        //상품 id 가져오고\r\n        //localstorage에 넣어라\r\n        let output = localStorage.getItem('recentView')\r\n        output = JSON.parse(output);\r\n        output.push(props.product[findResult].id);\r\n        //중복제거 set자료형\r\n        output = new Set(output);\r\n        output = Array.from(output);\r\n        localStorage.setItem('recentView', JSON.stringify(output));\r\n    }, [])\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            {/* <YellowBtn bg=\"skyblue\">버튼</YellowBtn> */}\r\n\r\n            {/* {\r\n                alertVal == 1 ? null : <div className=\"alert alert-warning\">2초 이내 눌럿</div>                \r\n            } */}\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <img src = {props.itemImg[findResult]} width=\"100%\" />\r\n                </div>\r\n                <div className=\"col-md-6 mt-4\">\r\n                    <div>\r\n                        {/* <input onChange={(e)=>{setNum(e.target.value)}}></input> */}\r\n                    </div>\r\n                    <h4>{props.product[findResult].title}</h4>\r\n                    <p>{props.product[findResult].content}</p>\r\n                    <p>KRW {props.product[findResult].price}</p>\r\n                    <button onClick={ ()=>{ \r\n                        dispatch(addProduct( {id: 1, name:props.product[findResult].title, count: props.product[findResult].count} ));\r\n                    } }>구매하기</button>\r\n                </div>\r\n            </div>            \r\n\r\n            <Nav variant=\"tabs\" defaultActiveKey=\"link0\">\r\n            <Nav.Item>\r\n                <Nav.Link eventkey=\"link0\" onClick={()=>{setTab(0)}}>Active</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                <Nav.Link eventKey=\"link1\" onClick={()=>{setTab(1)}}>Option 2</Nav.Link>\r\n            </Nav.Item>\r\n            <Nav.Item>\r\n                <Nav.Link eventKey=\"link2\" onClick={()=>{setTab(2)}}>Disabled</Nav.Link>\r\n            </Nav.Item>\r\n            </Nav>\r\n\r\n            <TabContent tab={tab}/>\r\n\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n//--- Array Tip 1\r\nfunction TabContent({tab}){\r\n    //className에 붙였다가 뗐다가 \r\n    //{tab} State가 변할때마다 하면 될 듯?\r\n\r\n  let [fade, setFade] = useState('');\r\n\r\n  useEffect( ()=>{\r\n    //end 붙이는 시점을 좀 뒤로\r\n    //react의 automatic batching 기능 \r\n    //state를 변경하는 함수가 근처에 있다면 state변경하는 함수가 여러개면 마지막에만 재 랜더링해준다\r\n    //그래서 시간 지연을 주지 않으면 티가 안난다\r\n    let Timer = setTimeout( ()=>{ setFade('end')}, 100);   \r\n    return () => {\r\n        clearTimeout(Timer);\r\n        setFade('');\r\n    }\r\n  },[tab])\r\n    //class 명에는 띄워쓰기가 있어야 여러개 사용가능\r\n   return (<div className={'start '+ fade}>\r\n    {\r\n        [\r\n            <div>내용0</div>, \r\n            <div>내용1</div>, \r\n            <div>내용2</div>    \r\n        ][tab]\r\n    }\r\n   </div>)\r\n}\r\n\r\n// --- Props Tip 1\r\n// function TabContent({tab}){\r\n//     if(tab == 0)\r\n//         return <div>내용 0</div>\r\n//     else if(tab == 1)\r\n//         return <div>내용 1</div>\r\n//     else if(tab == 2)\r\n//         return <div>내용 2</div>\r\n// }\r\n\r\n// --- base\r\n// function TabContent(props){\r\n//     if(props.tab == 0)\r\n//         return <div>내용 0</div>\r\n//     else if(props.tab == 1)\r\n//         return <div>내용 1</div>\r\n//     else if(props.tab == 2)\r\n//         return <div>내용 2</div>\r\n// }\r\n\r\nexport default Detail;"],"names":["TabContent","tab","useState","fade","setFade","useEffect","Timer","setTimeout","clearTimeout","className","props","dispatch","useDispatch","setTab","id","useParams","findResult","product","findIndex","x","output","localStorage","getItem","JSON","parse","push","Set","Array","from","setItem","stringify","src","itemImg","width","title","content","price","onClick","addProduct","name","count","variant","defaultActiveKey","eventkey","eventKey"],"sourceRoot":""}