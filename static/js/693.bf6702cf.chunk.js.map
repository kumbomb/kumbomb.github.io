{"version":3,"file":"static/js/693.bf6702cf.chunk.js","mappings":"yUAuCA,EAnC2BA,EAAAA,YAAiB,WAWzCC,GAAQ,IAVTC,EAUS,EAVTA,SACAC,EASS,EATTA,UACAC,EAQS,EARTA,QACAC,EAOS,EAPTA,SACAC,EAMS,EANTA,WACAC,EAKS,EALTA,MACAC,EAIS,EAJTA,KACAC,EAGS,EAHTA,QACAC,EAES,EAFTA,WACGC,GACM,YACHC,GAAoBC,EAAAA,EAAAA,IAAmBX,EAAU,SACjDY,EAAUC,IAAWZ,EAAWS,EAAmBH,GAAW,GAAJ,OAAOG,EAAP,YAA4BH,GAAWD,GAAQ,GAAJ,OAAOI,EAAP,YAA4BJ,GAAQJ,GAAW,GAAJ,OAAOQ,EAAP,YAAoCP,GAAY,GAAJ,OAAOO,EAAP,aAAqCN,GAAc,GAAJ,OAAOM,EAAP,eAAuCL,GAAS,GAAJ,OAAOK,EAAP,WAEvRI,GAAqBC,EAAAA,EAAAA,KAAK,SAAD,QAAC,UAAcN,GAAf,IAC7BR,UAAWW,EACXb,IAAKA,KAGP,GAAIS,EAAY,CACd,IAAIQ,EAAkB,GAAH,OAAMN,EAAN,eAMnB,MAJ0B,kBAAfF,IACTQ,EAAkB,GAAH,OAAMA,EAAN,YAAyBR,KAGtBO,EAAAA,EAAAA,KAAK,MAAO,CAC9Bd,UAAWe,EACXC,SAAUH,IAId,OAAOA,K,8BCoBT,MAlDA,WAII,IAAII,GAAQC,EAAAA,EAAAA,KAAa,SAACD,GAAD,OAAWA,KAEhCE,GAAYC,EAAAA,EAAAA,MAEhB,GAAwBC,EAAAA,EAAAA,UAAS,GAAjC,eAAKC,EAAL,KAAYC,EAAZ,KAEA,OACI,4BACI,mBAAQC,QAAU,WAAOD,EAASD,EAAM,IAAxC,kBACA,0BAAKL,EAAMQ,KAAKC,IAAhB,UAAuBT,EAAMQ,KAAKE,KAAlC,sCACA,mBAAQH,QAAS,WAAKL,GAASS,EAAAA,EAAAA,IAAU,KAAzC,4BACA,UAAC,EAAD,YACI,4BACI,2BACA,+BACA,4CACA,gDACA,0CACA,2DAGJ,2BAEQX,EAAMY,KAAKC,KAAI,SAASC,EAAMC,GAC1B,OACI,2BACI,wBAAKf,EAAMe,KACX,wBAAKf,EAAMY,KAAKG,GAAGC,MACnB,wBAAKhB,EAAMY,KAAKG,GAAGL,QACnB,wBAAKV,EAAMY,KAAKG,GAAGV,SACnB,yBACI,mBAAQE,QAAU,WACdL,GAASe,EAAAA,EAAAA,IAASF,KADtB,mBANCA","sources":["../node_modules/react-bootstrap/esm/Table.js","pages/Cart.js"],"sourcesContent":["import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-striped`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n\n  const table = /*#__PURE__*/_jsx(\"table\", { ...props,\n    className: classes,\n    ref: ref\n  });\n\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n\n  return table;\n});\nexport default Table;","import {useState, memo} from 'react';\r\nimport {Table} from 'react-bootstrap';\r\nimport { useDispatch, useSelector} from \"react-redux\";\r\nimport { addCount, addProduct } from './../store.js';\r\nimport { changeName, changeAge} from './../store/userSlice.js';\r\n\r\n\r\nfunction Cart(){\r\n\r\n    //redux store의 모든 state 꺼내서 a에 저장\r\n    //useSelector에 함수 필수 \r\n    let state = useSelector( (state) => state );\r\n    //store.js에 요청을 보내는 함수\r\n    let dispatch =  useDispatch();\r\n\r\n    let [count, setCount] = useState(0);\r\n\r\n    return(\r\n        <div>            \r\n            <button onClick={ () => {setCount(count+1)}}>+++</button>\r\n            <h6>{state.user.age}세 {state.user.name}의 장바구니</h6>\r\n            <button onClick={()=>{dispatch(changeAge(2))}}>버튼?</button>\r\n            <Table>\r\n                <thead>\r\n                    <tr>\r\n                    <th>#</th>\r\n                    <th>상품id</th>\r\n                    <th>상품명</th>\r\n                    <th>수량</th>\r\n                    <th>변경하기</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        state.cart.map(function(value,i){\r\n                            return(\r\n                                <tr key={i}>\r\n                                    <td>{state.i}</td>\r\n                                    <td>{state.cart[i].id}</td>\r\n                                    <td>{state.cart[i].name}</td>\r\n                                    <td>{state.cart[i].count}</td>\r\n                                    <td>\r\n                                        <button onClick={ ()=>{\r\n                                            dispatch(addCount(i));\r\n                                        } }>+</button>\r\n                                    </td>\r\n                               </tr>\r\n                            )                     \r\n                        })\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Cart;"],"names":["React","ref","bsPrefix","className","striped","bordered","borderless","hover","size","variant","responsive","props","decoratedBsPrefix","useBootstrapPrefix","classes","classNames","table","_jsx","responsiveClass","children","state","useSelector","dispatch","useDispatch","useState","count","setCount","onClick","user","age","name","changeAge","cart","map","value","i","id","addCount"],"sourceRoot":""}